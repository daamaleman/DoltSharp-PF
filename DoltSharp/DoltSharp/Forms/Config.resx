<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BtnReturn.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAAdoAAAHaAYWiZfsAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAAEMUlEQVR4Xt3aW4hVVRzH8a1mTReoUSEMmZCBGBATpFBMhJBShMJLD0EoiIQSglqRF7wgZAQ++BJR
        zFMgiBJFLwpeI5Eg6EHzRigo6qAkaglp1/H7P2ed8X/W+e9z9t5n75mz1w8+MrPY+7/2fzGes89eJxoc
        HMwdeRdncRivWMd0CnOwHeRjyA81p6zjOoU5mBV5TzWu9VrHdwJzMAuyBP+5hn191jmdwBxMi8zBfdes
        JdwFIFNx2zUaJ8wFID246ppsJrwFIOMgb3W60ThhLQB5HCdcc0mEswBkDL5zjSUV1AL0q8aSCmMByHbV
        VBrlXwCySjWUVrkXgCxC3F1eEvMx1qo90sxBjczGPeiGsvgH5/ANduAdTMcT1rzDxRysIVNwC7qRvP2P
        U1iHCdZ1FMkcFGQSrkBfbNH+wj68jtHWdeXNHoyibpyBvrjhdhnb0GNdY14aB6KoC8ehL2YkyWuHvGY8
        6l9rHup/qd7lfQt9AZ3iNF7S15uH+l+i6As3Waf6F5/gMX3d7Xj4QxRthZ6sk8nr08u6kayq/1Sf4uoJ
        ykD+Gjb4DaUlec0V8ycoi81WY0lJfnCFymyT1VwSkguuSNmttxpsRbLFFQjBh1aTzUgewRH4xcrqfavR
        ONV/qg84L7oCIVjoNxrn4Q/VT35/uAJldx3jdaNx6n+JojchH091sbLao3uL0zjAW4oqUnaL/f589iCr
        p4qU2Q00fchiD1Y3Pn6GLlZWe60ea8xBQeSJkLyY6GJl9ZbVozAHa8gsyGMqXayMLmGM2aM1qJHlrkjZ
        LTL7swZ9ZJcqVFbHzN6sQR+RR2UHXaEs7hpjI2FqQ2/+QBwiT4p/dYXS6sNYTMSLmIu3sRZf4TyG4was
        v6Evf6AZIo387oql0XJvkMgCz4M8mjuEIh7S/IlxdfPqX5IgC5B2nzD15iiRv5YPcBJ+vXbUPTeomzQp
        8pEqmERbu8NE/tvIC3Eee5Sy4TL0ltgwWVJktyuYRC7b4+R55HGbPnuopp4gDSI7SD+5gq3k+v0AMhM/
        utpZbByqpQunRZ7DgCvaTK4LUENWQ7bO/Pla2T9UQxfMgsxAs2+JikIWQJBXcdPNk9QdVHafzaJpkaWu
        cJzCFkCQyfjFzZXUtMq5frGsyE5V3FfoAgjyFI66+ZJYXTnPL5QVGY39rriv8AUQ5BnI13D8+S2V5wRm
        oazI05DbWj2R3H11W8cXgfTiN+hrsAxUjvcLtIu8gGtuEvGZdVyRiHyxq9ULs+g1C7SLPIk1eANd1jFF
        Iyuhm7UsME8OARmFVjdLy8yTQ0Hke4jNPritM08MCflcNezbYZ4UEiL7nnHvCl+aJ4WGxO12fW2eEBry
        LP52TWvfmyeEiMhXcP0FOG0eHCIinxr9BbhuHhwq4t+m3zMPDBVZoZoXB8wDQ0Y+hWybH46iqO8BNn10
        JUW/Ap0AAAAASUVORK5CYII=
</value>
  </data>
</root>