<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BtnReturn.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAB
        2QAAAdkBKBtElgAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAQxSURBVHhe3dpb
        iFVVHMfxrWZNF6hRIQyZkIEYEBOkUEyEkFKEwksPQSiIhBKCWpEXvCBkBD74ElHMUyCIEkUvCl4jkSDo
        QfNGKCjqoCRqCWnX8fs/Z53xf9b573P23mfvmbPXDz4ys9j7v/Z/MZ6zz14nGhwczB15F2dxGK9Yx3QK
        c7Ad5GPIDzWnrOM6hTmYFXlPNa71Wsd3AnMwC7IE/7mGfX3WOZ3AHEyLzMF916wl3AUgU3HbNRonzAUg
        PbjqmmwmvAUg4yBvdbrROGEtAHkcJ1xzSYSzAGQMvnONJRXUAvSrxpIKYwHIdtVUGuVfALJKNZRWuReA
        LELcXV4S8zHWqj3SzEGNzMY96Iay+Afn8A124B1MxxPWvMPFHKwhU3ALupG8/Y9TWIcJ1nUUyRwUZBKu
        QF9s0f7CPryO0dZ15c0ejKJunIG+uOF2GdvQY11jXhoHoqgLx6EvZiTJa4e8ZjzqX2se6n+p3uV9C30B
        neI0XtLXm4f6X6LoCzdZp/oXn+Axfd3tePhDFG2FnqyTyevTy7qRrKr/VJ/i6gnKQP4aNvgNpSV5zRXz
        JyiLzVZjSUl+cIXKbJPVXBKSC65I2a23GmxFssUVCMGHVpPNSB7BEfjFyup9q9E41X+qDzgvugIhWOg3
        GufhD9VPfn+4AmV3HeN1o3Hqf4miNyEfT3Wxstqje4vTOMBbiipSdov9/nz2IKunipTZDTR9yGIPVjc+
        foYuVlZ7rR5rzEFB5ImQvJjoYmX1ltWjMAdryCzIYypdrIwuYYzZozWokeWuSNktMvuzBn1klypUVsfM
        3qxBH5FHZQddoSzuGmMjYWpDb/5AHCJPin91hdLqw1hMxIuYi7exFl/hPIbjBqy/oS9/oBkijfzuiqXR
        cm+QyALPgzyaO4QiHtL8iXF18+pfkiALkHafMPXmKJG/lg9wEn69dtQ9N6ibNCnykSqYRFu7w0T+28gL
        cR57lLLhMvSW2DBZUmS3K5hELtvj5HnkcZs+e6imniANIjtIP7mCreT6/QAyEz+62llsHKqlC6dFnsOA
        K9pMrgtQQ1ZDts78+VrZP1RDF8yCzECzb4mKQhZAkFdx082T1B1Udp/NommRpa5wnMIWQJDJ+MXNldS0
        yrl+sazITlXcV+gCCPIUjrr5klhdOc8vlBUZjf2uuK/wBRDkGcjXcPz5LZXnBGahrMjTkNtaPZHcfXVb
        xxeB9OI36GuwDFSO9wu0i7yAa24S8Zl1XJGIfLGr1Quz6DULtIs8iTV4A13WMUUjK6GbtSwwTw4BGYVW
        N0vLzJNDQeR7iM0+uK0zTwwJ+Vw17NthnhQSIvuece8KX5onhYbE7XZ9bZ4QGvIs/nZNa9+bJ4SIyFdw
        /QU4bR4cIiKfGv0FuG4eHCri36bfMw8MFVmhmhcHzANDRj6FbJsfjqKo7wE2fXQlRb8CnQAAAABJRU5E
        rkJggg==
</value>
  </data>
</root>